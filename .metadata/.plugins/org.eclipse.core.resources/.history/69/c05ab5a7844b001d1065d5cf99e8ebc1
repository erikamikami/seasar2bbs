package com.example.form;

import javax.annotation.Resource;

import org.seasar.struts.annotation.EmailType;
import org.seasar.struts.annotation.Maxlength;
import org.seasar.struts.annotation.Minlength;
import org.seasar.struts.annotation.Msg;
import org.seasar.struts.annotation.Required;

import com.example.annotation.ACheck;
import com.example.annotation.EmailDuplication;
import com.example.entity.User;
import com.example.service.UserRegisterService;

public class UserRegisterForm {

	@Resource
	public UserRegisterService userRegisterService;

	@Required(msg = @Msg(key = "ユーザー名は必須です", resource = false))
	@ACheck(msg = @Msg(key = "aaaaaaaaa", resource = false))
	public String name;
	@Required(msg = @Msg(key = "性別は必須です", resource = false))
	public String genderId;
	@Required(msg = @Msg(key = "メールアドレスは必須です", resource = false))
	@EmailType(msg = @Msg(key = "メールアドレスの形式が不正です", resource = false))
	@EmailDuplication(msg=@Msg(key="このメールアドレスは登録できません", resource=false))
	public String email;
	@Required(msg = @Msg(key = "パスワードは必須です", resource = false))
	@Minlength(minlength = 8, msg = @Msg(key = "8文字以上、25文字以内で設定してください", resource = false))
	@Maxlength(maxlength = 25, msg = @Msg(key = "8文字以上、25文字以内で設定してください", resource = false))
	public String password;

	/**
	 * UserRegisterFormをUserに変換します
	 *
	 * @return 変換後のUser
	 */
	public User transformToUser() {
		User user = new User();
		user.name = this.name;
		user.genderId = Integer.parseInt(this.genderId);
		user.email = this.email;
		user.password = this.password;
		return user;
	}

}